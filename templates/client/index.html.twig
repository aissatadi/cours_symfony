{# templates/client/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Liste des clients{% endblock %}

{% block content %}
    <style>
        /* Style de base du tableau et des boutons */
        body {
            font-family: Arial, sans-serif;
            background-color: #FFF9E3; 
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            font-family: Arial, sans-serif;
        }
        th {
            background-color: #1ABC9C; 
            color: #FFF;
            padding: 12px;
            text-align: left;
        }
        td {
            border: 1px solid #BDC3C7; 
            padding: 10px;
            text-align: left;
        }
        tr:nth-child(even) {
            background-color: #FFF;
        }
        tr:nth-child(odd) {
            background-color: #E7F3FF; 
        }
        tr:hover {
            background-color: #1ABC9C;
            color: #FFF; 
        }
        h2 {
            color: #1ABC9C; 
        }
        button {
            background-color: #1ABC9C; 
            color: white;
            border: none;
            padding: 8px 16px;
            margin: 10px 0;
            cursor: pointer;
            font-weight: bold;
            border-radius: 4px;
        }
        button:hover {
            background-color: #148B8B; 
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            width: 300px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        .modal-header h2 {
            margin: 0;
            color: #1ABC9C; 
        }
        .modal-footer {
            text-align: right;
        }
        .close {
            cursor: pointer;
            color: #aaa;
            float: right;
            font-size: 20px;
        }
        .close:hover {
            color: #000;
        }

        .filter-container {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 15px;
        }
        label {
            font-weight: bold;
            color: #1ABC9C; 
        }
        input[type="text"] {
            padding: 4px;
            border: 1px solid #BDC3C7; 
            border-radius: 4px;
        }
    </style>

    <h2>Liste des clients</h2>

    <div>
        <button onclick="showModal()">Ajouter un client</button>
    </div>

    <div class="filter-container">
        <label for="nicknameFilter">Surnom :</label>
        <input type="text" id="nicknameFilter" name="nicknameFilter">
        
        <label for="phoneFilter">Téléphone :</label>
        <input type="text" id="phoneFilter" name="phoneFilter">
        
        <button type="button" onclick="filterClients()">Filtrer</button>
    </div>

    <table>
        <thead>
            <tr>
                <th>Surnom</th>
                <th>Téléphone</th>
                <th>Adresse</th>
                <th>Dettes</th> 
            </tr>
        </thead>
        <tbody id="clientTable">
            {% for client in clients %}
                <tr>
                    <td>{{ client.surname }}</td>
                    <td>{{ client.telephone }}</td>
                    <td>{{ client.adresse }}</td>
                    <td>
                        <a href="{{ path('client.dettes', { id: client.id }) }}">Voir les dettes</a> 
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <div id="addClientModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span class="close" onclick="closeModal()">&times;</span>
                <h2>Ajouter un client</h2>
            </div>
            <form id="addClientForm" onsubmit="addClient(); return false;">
                <label for="nickname">Surnom :</label>
                <input type="text" id="nickname" name="nickname" required>

                <label for="phone">Téléphone :</label>
                <input type="text" id="phone" name="phone" required>

                <label for="address">Adresse :</label>
                <input type="text" id="address" name="address" required>

                <div class="modal-footer">
                    <button type="submit">Ajouter</button>
                </div>
            </form>
        </div>
    </div>

    <script>
    function showModal() {
        document.getElementById("addClientModal").style.display = "flex";
    }

    function closeModal() {
        document.getElementById("addClientModal").style.display = "none";
        document.getElementById("addClientForm").reset();
    }

    async function addClient() {
        const nickname = document.getElementById("nickname").value;
        const phone = document.getElementById("phone").value;
        const address = document.getElementById("address").value;

        if (nickname && phone && address) {
            const response = await fetch('{{ path('client.add') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams({
                    nickname: nickname,
                    phone: phone,
                    address: address,
                }),
            });

            const data = await response.json();

            if (data.success) {
                const table = document.getElementById("clientTable");
                const row = table.insertRow();
                
                const cellNickname = row.insertCell(0);
                const cellPhone = row.insertCell(1);
                const cellAddress = row.insertCell(2);
                const cellActions = row.insertCell(3); {# Nouvelle cellule pour les actions #}
                
                cellNickname.textContent = data.client.surname;
                cellPhone.textContent = data.client.telephone;
                cellAddress.textContent = data.client.adresse;
                cellActions.innerHTML = '<a href="{{ path('client.dettes', { id: ' + data.client.id + ' }) }}">Voir les dettes</a>'; {# Lien vers les dettes #}

                closeModal(); 
        }
          }
          }

async function filterClients() {
    const nicknameFilter = document.getElementById("nicknameFilter").value;
    const phoneFilter = document.getElementById("phoneFilter").value;

    // Création d'un objet URL avec les paramètres de filtre
    const url = new URL(window.location.href);
    url.searchParams.set('surname', nicknameFilter);
    url.searchParams.set('telephone', phoneFilter);

    const response = await fetch(url.toString(), {
        method: 'GET',
        headers: {
            'X-Requested-With': 'XMLHttpRequest', 
        }
    });

    if (response.ok) {
        const data = await response.json();
        const table = document.getElementById("clientTable");
        table.innerHTML = ""; // Vider le tableau existant

        data.clients.forEach(client => {
            const row = document.createElement("tr");

            const cellNickname = document.createElement("td");
            cellNickname.textContent = client.surname;
            row.appendChild(cellNickname);

            const cellPhone = document.createElement("td");
            cellPhone.textContent = client.telephone;
            row.appendChild(cellPhone);

            const cellAddress = document.createElement("td");
            cellAddress.textContent = client.adresse;
            row.appendChild(cellAddress);

            const cellActions = document.createElement("td");
            const debtLink = document.createElement("a");
            debtLink.href = `{{ path('client.dettes', { id: 'CLIENT_ID' }) }}`.replace('CLIENT_ID', client.id);
            debtLink.textContent = "Voir les dettes";
            cellActions.appendChild(debtLink);
            row.appendChild(cellActions);

            table.appendChild(row);
        });
    } else {
        console.error("Erreur lors du filtrage des clients");
    }
}


    </script>

{% endblock %}
